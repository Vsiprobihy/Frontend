name: Deploy Front to Server

on:
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-22.04

    env:
      SERVICE_NAME: frontend



    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository }}/${{ env.SERVICE_NAME }}:${{ github.sha }} .

      - name: Push Docker image to GitHub Container Registry
        run: |
          docker push ghcr.io/${{ github.repository }}/${{ env.SERVICE_NAME }}:${{ github.sha }}

      - name: Create .env file for docker-compose
        run: |
          echo "NEXT_PUBLIC_BASE_URL=${{ secrets.NEXT_PUBLIC_BASE_URL }}" >> .env
          echo "BASE_URL=${{ secrets.BASE_URL }}" >> .env

      - name: Verify .env and docker-compose.yml files
        run: ls -l .env docker-compose.yml

      - name: Show files
        run: |
          ls -l
          pwd

      - name: Copy docker-compose.yml to remote server
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "./.env ./docker-compose.yml"
          target: "/home/***/"
          rm: false
          strip_components: 0
          overwrite: true
          debug: true

      - name: Deploy to Remote Server with Rolling Update
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            docker pull ghcr.io/${{ github.repository }}/${{ env.SERVICE_NAME }}:${{ github.sha }}
            cd /home/***
            docker-compose --env-file .env -f docker-compose.yml up -d --no-deps --scale ${{ env.SERVICE_NAME }}=1 --remove-orphans
            docker image prune -f

      - name: Cleanup Docker images on GitHub runner
        run: |
          docker rmi ghcr.io/${{ github.repository }}/${{ env.SERVICE_NAME }}:${{ github.sha }}
