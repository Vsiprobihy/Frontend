// This file is auto-generated by @hey-api/openapi-ts

export const TokenRefreshSchema = {
  required: ["refresh"],
  type: "object",
  properties: {
    refresh: {
      title: "Refresh",
      type: "string",
      minLength: 1,
    },
    access: {
      title: "Access",
      type: "string",
      readOnly: true,
      minLength: 1,
    },
  },
} as const;

export const CompetitionTypeSchema = {
  required: ["name"],
  type: "object",
  properties: {
    id: {
      title: "ID",
      type: "integer",
      readOnly: true,
    },
    name: {
      title: "Name",
      type: "string",
      enum: [
        "running",
        "trail",
        "ultramarathon",
        "cycling",
        "online",
        "walking",
        "ocr",
        "swimming",
        "triathlon",
      ],
    },
  },
} as const;

export const OrganizationSchema = {
  required: ["name", "email"],
  type: "object",
  properties: {
    id: {
      title: "ID",
      type: "integer",
      readOnly: true,
    },
    users: {
      title: "Users",
      type: "string",
      readOnly: true,
    },
    phoneNumbers: {
      type: "array",
      items: {
        type: "string",
        maxLength: 20,
        minLength: 1,
      },
    },
    name: {
      title: "Name",
      type: "string",
      maxLength: 255,
      minLength: 1,
    },
    siteUrl: {
      title: "SiteUrl",
      type: "string",
      format: "uri",
      maxLength: 200,
      "x-nullable": true,
    },
    email: {
      title: "Email",
      type: "string",
      format: "email",
      maxLength: 254,
      minLength: 1,
    },
    instagramUrl: {
      title: "InstagramUrl",
      type: "string",
      format: "uri",
      maxLength: 200,
      "x-nullable": true,
    },
    facebookUrl: {
      title: "FacebookUrl",
      type: "string",
      format: "uri",
      maxLength: 200,
      "x-nullable": true,
    },
    telegramUrl: {
      title: "TelegramUrl",
      type: "string",
      format: "uri",
      maxLength: 200,
      "x-nullable": true,
    },
    mainImage: {
      title: "MainImage",
      type: "string",
      readOnly: true,
      "x-nullable": true,
      format: "uri",
    },
    backgroundImage: {
      title: "BackgroundImage",
      type: "string",
      readOnly: true,
      "x-nullable": true,
      format: "uri",
    },
  },
} as const;

export const PublicDistanceEventSchema = {
  required: ["name"],
  type: "object",
  properties: {
    id: {
      title: "ID",
      type: "integer",
      readOnly: true,
    },
    name: {
      title: "Name",
      type: "string",
      maxLength: 255,
      minLength: 1,
    },
  },
} as const;

export const AdditionalItemEventSchema = {
  required: ["itemType"],
  type: "object",
  properties: {
    id: {
      title: "Id",
      type: "integer",
    },
    itemType: {
      title: "ItemType",
      type: "string",
      maxLength: 50,
      minLength: 1,
    },
    price: {
      title: "Price",
      type: "string",
      format: "decimal",
      "x-nullable": true,
    },
    distance: {
      title: "Distance",
      type: "integer",
    },
  },
} as const;

export const DistanceUserListSchema = {
  required: ["firstName", "distance", "additionalItems"],
  type: "object",
  properties: {
    id: {
      title: "ID",
      type: "integer",
      readOnly: true,
    },
    firstName: {
      title: "FirstName",
      type: "string",
      maxLength: 50,
      minLength: 1,
    },
    startingNumber: {
      title: "StartingNumber",
      type: "integer",
      maximum: 2147483647,
      minimum: 0,
    },
    city: {
      title: "City",
      type: "string",
      maxLength: 100,
      minLength: 1,
      "x-nullable": true,
    },
    gender: {
      title: "Gender",
      type: "string",
      enum: ["M", "F"],
      "x-nullable": true,
    },
    dateOfBirth: {
      title: "DateOfBirth",
      type: "string",
      format: "date",
      "x-nullable": true,
    },
    sportsClub: {
      title: "SportsClub",
      type: "string",
      maxLength: 100,
      minLength: 1,
      "x-nullable": true,
    },
    distance: {
      $ref: "#/definitions/PublicDistanceEvent",
    },
    additionalItems: {
      type: "array",
      items: {
        $ref: "#/definitions/AdditionalItemEvent",
      },
    },
  },
} as const;

export const DistanceUserDetailSchema = {
  required: ["email", "firstName", "lastName"],
  type: "object",
  properties: {
    id: {
      title: "ID",
      type: "integer",
      readOnly: true,
    },
    registrationDate: {
      title: "RegistrationDate",
      type: "string",
      format: "date-time",
    },
    email: {
      title: "Email",
      type: "string",
      format: "email",
      maxLength: 254,
      minLength: 1,
    },
    firstName: {
      title: "FirstName",
      type: "string",
      maxLength: 50,
      minLength: 1,
    },
    lastName: {
      title: "LastName",
      type: "string",
      maxLength: 50,
      minLength: 1,
    },
    firstNameEng: {
      title: "FirstNameEng",
      type: "string",
      maxLength: 50,
      "x-nullable": true,
    },
    lastNameEng: {
      title: "LastNameEng",
      type: "string",
      maxLength: 50,
      "x-nullable": true,
    },
    gender: {
      title: "Gender",
      type: "string",
      enum: ["M", "F"],
      "x-nullable": true,
    },
    dateOfBirth: {
      title: "DateOfBirth",
      type: "string",
      format: "date",
      "x-nullable": true,
    },
    tShirtSize: {
      title: "TShirtSize",
      type: "string",
      enum: ["XXS", "XS", "S", "M", "L", "XL", "XXL", "XXXL"],
      "x-nullable": true,
    },
    country: {
      title: "Country",
      type: "string",
      maxLength: 100,
      minLength: 1,
      "x-nullable": true,
    },
    city: {
      title: "City",
      type: "string",
      maxLength: 100,
      minLength: 1,
      "x-nullable": true,
    },
    phoneNumber: {
      title: "PhoneNumber",
      type: "string",
      maxLength: 20,
      minLength: 1,
      "x-nullable": true,
    },
    sportsClub: {
      title: "SportsClub",
      type: "string",
      maxLength: 100,
      minLength: 1,
      "x-nullable": true,
    },
    emergencyContactName: {
      title: "EmergencyContactName",
      type: "string",
      maxLength: 100,
      minLength: 1,
      "x-nullable": true,
    },
    emergencyContactPhone: {
      title: "EmergencyContactPhone",
      type: "string",
      maxLength: 20,
      minLength: 1,
      "x-nullable": true,
    },
    distance: {
      $ref: "#/definitions/PublicDistanceEvent",
    },
    additionalItems: {
      type: "array",
      items: {
        $ref: "#/definitions/AdditionalItemEvent",
      },
      readOnly: true,
    },
  },
} as const;

export const UserDistanceRegistrationSchema = {
  required: ["email", "firstName", "lastName"],
  type: "object",
  properties: {
    id: {
      title: "ID",
      type: "integer",
      readOnly: true,
    },
    registrationDate: {
      title: "RegistrationDate",
      type: "string",
      format: "date-time",
    },
    email: {
      title: "Email",
      type: "string",
      format: "email",
      maxLength: 254,
      minLength: 1,
    },
    firstName: {
      title: "FirstName",
      type: "string",
      maxLength: 50,
      minLength: 1,
    },
    lastName: {
      title: "LastName",
      type: "string",
      maxLength: 50,
      minLength: 1,
    },
    firstNameEng: {
      title: "FirstNameEng",
      type: "string",
      maxLength: 50,
      "x-nullable": true,
    },
    lastNameEng: {
      title: "LastNameEng",
      type: "string",
      maxLength: 50,
      "x-nullable": true,
    },
    gender: {
      title: "Gender",
      type: "string",
      enum: ["M", "F"],
      "x-nullable": true,
    },
    startingNumber: {
      title: "StartingNumber",
      type: "integer",
      maximum: 2147483647,
      minimum: 0,
    },
    dateOfBirth: {
      title: "DateOfBirth",
      type: "string",
      format: "date",
      "x-nullable": true,
    },
    tShirtSize: {
      title: "TShirtSize",
      type: "string",
      enum: ["XXS", "XS", "S", "M", "L", "XL", "XXL", "XXXL"],
      "x-nullable": true,
    },
    country: {
      title: "Country",
      type: "string",
      maxLength: 100,
      minLength: 1,
      "x-nullable": true,
    },
    city: {
      title: "City",
      type: "string",
      maxLength: 100,
      minLength: 1,
      "x-nullable": true,
    },
    phoneNumber: {
      title: "PhoneNumber",
      type: "string",
      maxLength: 20,
      minLength: 1,
      "x-nullable": true,
    },
    sportsClub: {
      title: "SportsClub",
      type: "string",
      maxLength: 100,
      minLength: 1,
      "x-nullable": true,
    },
    emergencyContactName: {
      title: "EmergencyContactName",
      type: "string",
      maxLength: 100,
      minLength: 1,
      "x-nullable": true,
    },
    emergencyContactPhone: {
      title: "EmergencyContactPhone",
      type: "string",
      maxLength: 20,
      minLength: 1,
      "x-nullable": true,
    },
    promoCode: {
      title: "Promocode",
      type: "integer",
    },
    additionalItems: {
      type: "array",
      items: {
        type: "integer",
      },
      uniqueItems: true,
    },
  },
} as const;

export const UserProfileSchema = {
  required: [
    "firstName",
    "lastName",
    "firstNameEng",
    "lastNameEng",
    "gender",
    "country",
    "city",
    "phoneNumber",
    "emergencyContactName",
    "emergencyContactPhone",
  ],
  type: "object",
  properties: {
    id: {
      title: "ID",
      type: "integer",
      readOnly: true,
    },
    email: {
      title: "Email",
      type: "string",
      readOnly: true,
    },
    role: {
      title: "Role",
      type: "string",
      enum: ["user", "organizer", "admin"],
    },
    firstName: {
      title: "FirstName",
      type: "string",
      maxLength: 50,
      minLength: 1,
    },
    lastName: {
      title: "LastName",
      type: "string",
      maxLength: 50,
      minLength: 1,
    },
    firstNameEng: {
      title: "FirstNameEng",
      type: "string",
      maxLength: 50,
      minLength: 1,
    },
    lastNameEng: {
      title: "LastNameEng",
      type: "string",
      maxLength: 50,
      minLength: 1,
    },
    gender: {
      title: "Gender",
      type: "string",
      enum: ["M", "F"],
    },
    dateOfBirth: {
      title: "DateOfBirth",
      type: "string",
      format: "date",
      "x-nullable": true,
    },
    tShirtSize: {
      title: "TShirtSize",
      type: "string",
      enum: ["XXS", "XS", "S", "M", "L", "XL", "XXL", "XXXL"],
      "x-nullable": true,
    },
    country: {
      title: "Country",
      type: "string",
      maxLength: 100,
      minLength: 1,
    },
    city: {
      title: "City",
      type: "string",
      maxLength: 100,
      minLength: 1,
    },
    phoneNumber: {
      title: "Phone number",
      type: "string",
      maxLength: 20,
      minLength: 1,
    },
    sportsClub: {
      title: "SportsClub",
      type: "string",
      maxLength: 100,
      minLength: 1,
      "x-nullable": true,
    },
    emergencyContactName: {
      title: "EmergencyContactName",
      type: "string",
      maxLength: 100,
      minLength: 1,
    },
    emergencyContactPhone: {
      title: "Phone number",
      type: "string",
      maxLength: 20,
      minLength: 1,
    },
    avatar: {
      title: "Avatar",
      type: "string",
      readOnly: true,
      "x-nullable": true,
      format: "uri",
    },
  },
} as const;

export const AdditionalProfileSchema = {
  required: [
    "firstName",
    "lastName",
    "firstNameEng",
    "lastNameEng",
    "gender",
    "country",
    "city",
    "phoneNumber",
    "emergencyContactName",
    "emergencyContactPhone",
    "email",
  ],
  type: "object",
  properties: {
    id: {
      title: "ID",
      type: "integer",
      readOnly: true,
    },
    firstName: {
      title: "FirstName",
      type: "string",
      maxLength: 50,
      minLength: 1,
    },
    lastName: {
      title: "LastName",
      type: "string",
      maxLength: 50,
      minLength: 1,
    },
    firstNameEng: {
      title: "FirstNameEng",
      type: "string",
      maxLength: 50,
      minLength: 1,
    },
    lastNameEng: {
      title: "LastNameEng",
      type: "string",
      maxLength: 50,
      minLength: 1,
    },
    gender: {
      title: "Gender",
      type: "string",
      enum: ["M", "F"],
    },
    dateOfBirth: {
      title: "DateOfBirth",
      type: "string",
      format: "date",
      "x-nullable": true,
    },
    tShirtSize: {
      title: "TShirtSize",
      type: "string",
      enum: ["XXS", "XS", "S", "M", "L", "XL", "XXL", "XXXL"],
      "x-nullable": true,
    },
    country: {
      title: "Country",
      type: "string",
      maxLength: 100,
      minLength: 1,
    },
    city: {
      title: "City",
      type: "string",
      maxLength: 100,
      minLength: 1,
    },
    phoneNumber: {
      title: "Phone number",
      type: "string",
      maxLength: 20,
      minLength: 1,
    },
    sportsClub: {
      title: "SportsClub",
      type: "string",
      maxLength: 100,
      minLength: 1,
      "x-nullable": true,
    },
    emergencyContactName: {
      title: "EmergencyContactName",
      type: "string",
      maxLength: 100,
      minLength: 1,
    },
    emergencyContactPhone: {
      title: "Phone number",
      type: "string",
      maxLength: 20,
      minLength: 1,
    },
    email: {
      title: "Email",
      type: "string",
      format: "email",
      maxLength: 254,
      minLength: 1,
    },
  },
} as const;

export const CostChangeRuleSchema = {
  required: ["cost"],
  type: "object",
  properties: {
    id: {
      title: "Id",
      type: "integer",
    },
    cost: {
      title: "Cost",
      type: "string",
      format: "decimal",
    },
    fromParticipants: {
      title: "FromParticipants",
      type: "integer",
      maximum: 2147483647,
      minimum: 0,
      "x-nullable": true,
    },
    fromDate: {
      title: "FromDate",
      type: "string",
      format: "date",
      "x-nullable": true,
    },
  },
} as const;

export const AgeCategorySchema = {
  required: ["name", "gender", "ageFrom", "ageTo"],
  type: "object",
  properties: {
    id: {
      title: "Id",
      type: "integer",
    },
    name: {
      title: "Name",
      type: "string",
      maxLength: 255,
      minLength: 1,
    },
    gender: {
      title: "Gender",
      type: "string",
      enum: ["M", "F"],
    },
    ageFrom: {
      title: "AgeFrom",
      type: "integer",
      maximum: 2147483647,
      minimum: 0,
    },
    ageTo: {
      title: "AgeTo",
      type: "integer",
      maximum: 2147483647,
      minimum: 0,
    },
    distance: {
      title: "Distance",
      type: "integer",
      readOnly: true,
    },
  },
} as const;

export const PromoCodeSchema = {
  required: ["name", "promoType", "discountValue"],
  type: "object",
  properties: {
    id: {
      title: "Id",
      type: "integer",
    },
    name: {
      title: "Name",
      type: "string",
      maxLength: 255,
      minLength: 1,
    },
    promoType: {
      title: "PromoType",
      type: "string",
      enum: ["flat", "percentage", "sum_registration", "free"],
    },
    discountValue: {
      title: "DiscountValue",
      type: "string",
      format: "decimal",
    },
    isActive: {
      title: "IsActive",
      type: "boolean",
    },
    isSingleUse: {
      title: "IsSingleUse",
      type: "boolean",
    },
    distance: {
      title: "Distance",
      type: "integer",
      readOnly: true,
    },
  },
} as const;

export const DistanceEventSchema = {
  required: ["name"],
  type: "object",
  properties: {
    id: {
      title: "Id",
      type: "integer",
    },
    name: {
      title: "Name",
      type: "string",
      maxLength: 255,
      minLength: 1,
    },
    competitionType: {
      title: "CompetitionType",
      type: "string",
      enum: [
        "running",
        "trail",
        "ultramarathon",
        "cycling",
        "online",
        "walking",
        "ocr",
        "swimming",
        "triathlon",
      ],
    },
    category: {
      title: "Category",
      type: "string",
      enum: [
        "adults",
        "children",
        "men",
        "women",
        "disabled",
        "veterans",
        "pupils",
        "boys",
        "juniors",
        "students",
        "teachers",
      ],
    },
    allowRegistration: {
      title: "AllowRegistration",
      type: "boolean",
    },
    length: {
      title: "Length",
      type: "string",
      format: "decimal",
      "x-nullable": true,
    },
    startNumberFrom: {
      title: "StartNumberFrom",
      type: "integer",
      maximum: 2147483647,
      minimum: 0,
      "x-nullable": true,
    },
    startNumberTo: {
      title: "StartNumberTo",
      type: "integer",
      maximum: 2147483647,
      minimum: 0,
      "x-nullable": true,
    },
    ageFrom: {
      title: "AgeFrom",
      type: "integer",
      maximum: 2147483647,
      minimum: 0,
      "x-nullable": true,
    },
    ageTo: {
      title: "AgeTo",
      type: "integer",
      maximum: 2147483647,
      minimum: 0,
      "x-nullable": true,
    },
    cost: {
      title: "Cost",
      type: "string",
      format: "decimal",
      "x-nullable": true,
    },
    isFree: {
      title: "IsFree",
      type: "boolean",
    },
    promoOnlyRegistration: {
      title: "PromoOnlyRegistration",
      type: "boolean",
    },
    showNameOnNumber: {
      title: "ShowNameOnNumber",
      type: "boolean",
    },
    showStartNumber: {
      title: "ShowStartNumber",
      type: "boolean",
    },
    event: {
      title: "Event",
      type: "integer",
    },
    additionalOptions: {
      type: "array",
      items: {
        $ref: "#/definitions/AdditionalItemEvent",
      },
    },
    costChangeRules: {
      type: "array",
      items: {
        $ref: "#/definitions/CostChangeRule",
      },
    },
    ageCategories: {
      type: "array",
      items: {
        $ref: "#/definitions/AgeCategory",
      },
    },
    promoCodes: {
      type: "array",
      items: {
        $ref: "#/definitions/PromoCode",
      },
    },
  },
} as const;

export const EventSchema = {
  required: [
    "name",
    "organization_id",
    "competitionType",
    "dateFrom",
    "dateTo",
    "place",
    "placeRegion",
    "distances",
  ],
  type: "object",
  properties: {
    id: {
      title: "Id",
      type: "integer",
      readOnly: true,
    },
    name: {
      title: "Name",
      type: "string",
      maxLength: 255,
      minLength: 1,
    },
    organizer: {
      title: "Organizer",
      type: "string",
      readOnly: true,
    },
    organization_id: {
      title: "Organization id",
      type: "integer",
    },
    competitionType: {
      type: "array",
      items: {
        $ref: "#/definitions/CompetitionType",
      },
    },
    dateFrom: {
      title: "DateFrom",
      type: "string",
      format: "date",
    },
    dateTo: {
      title: "DateTo",
      type: "string",
      format: "date",
    },
    place: {
      title: "Place",
      type: "string",
      maxLength: 255,
      minLength: 1,
    },
    placeRegion: {
      title: "PlaceRegion",
      type: "string",
      enum: [
        "vinnytsia_region",
        "volyn_region",
        "dnipropetrovsk_region",
        "donetsk_region",
        "zhytomyr_region",
        "zakarpattia_region",
        "zaporizhzhia_region",
        "ivano-frankivsk_region",
        "kyiv_region",
        "kirovohrad_region",
        "luhansk_region",
        "lviv_region",
        "mykolaiv_region",
        "odesa_region",
        "poltava_region",
        "rivne_region",
        "sumy_region",
        "ternopil_region",
        "kharkiv_region",
        "kherson_region",
        "khmelnytskyi_region",
        "cherkasy_region",
        "chernihiv_region",
        "chernivtsi_region",
      ],
      "x-nullable": true,
    },
    photos: {
      title: "Photos",
      type: "string",
      readOnly: true,
      "x-nullable": true,
      format: "uri",
    },
    description: {
      title: "Description",
      type: "string",
      minLength: 1,
    },
    registrationLink: {
      title: "RegistrationLink",
      type: "string",
      format: "uri",
      maxLength: 200,
      "x-nullable": true,
    },
    hideParticipants: {
      title: "HideParticipants",
      type: "boolean",
    },
    schedulePdf: {
      title: "SchedulePdf",
      type: "string",
      readOnly: true,
      "x-nullable": true,
      format: "uri",
    },
    coOrganizer: {
      title: "CoOrganizer",
      type: "string",
      "x-nullable": true,
    },
    distances: {
      type: "array",
      items: {
        $ref: "#/definitions/DistanceEvent",
      },
    },
    extendedDescription: {
      title: "ExtendedDescription",
      type: "string",
      "x-nullable": true,
    },
  },
} as const;
